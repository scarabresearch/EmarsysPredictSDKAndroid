/*
 * Copyright 2016 Scarab Research Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'signing'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'io.codearte.nexus-staging'

def artifact = new Properties()
artifact.load(project.file('deploy.properties').newDataInputStream())

// for some reason need to separately specify groupId and version
group = artifact.groupId
version = artifact.version

signing {
    sign configurations.archives
}

nexusStaging {
  delayBetweenRetriesInMillis = 5000
  numberOfRetries = 10
}

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId artifact.groupId
            artifactId artifact.artifactId
            version artifact.version
            name artifact.artifactId
            url artifact.siteUrl
            description 'Emarsys Predict SDK for Android'
            inceptionYear '2016'
            licenses {
                license {
                    name 'Apache-2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
            scm {
                connection artifact.gitUrl
                developerConnection artifact.gitUrl
                url artifact.siteUrl
            }
            developers {
                developer {
                    id 'scarabresearch'
                    name 'Scarab Research Ltd.'
                }
            }
        }
    }
}

bintray {
    user = System.env.BINTRAY_USER
    key = System.env.BINTRAY_APIKEY
    configurations = ['archives']
    pkg {
        repo = "maven"
        name = artifact.artifactId
        version {
            name = artifact.version
        }
        licenses = artifact.licenses
        vcsUrl = artifact.gitUrl
        websiteUrl = artifact.siteUrl
        publish = true
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment {
                MavenDeployment deployment -> signing.signPom(deployment)
            }
            repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
                authentication(userName: System.env.SONATYPE_USER, password: System.env.SONATYPE_PASSWORD)
            }
            pom.project {
                packaging 'aar'
                groupId artifact.groupId
                artifactId artifact.artifactId
                version artifact.version
                name artifact.artifactId
                url artifact.siteUrl
                description 'Emarsys Predict SDK for Android'
                inceptionYear '2016'
                licenses {
                    license {
                        name 'Apache-2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
                scm {
                    connection artifact.gitUrl
                    developerConnection artifact.gitUrl
                    url artifact.siteUrl
                }
                developers {
                    developer {
                        id 'scarabresearch'
                        name 'Scarab Research Ltd.'
                    }
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
